#include "ultrasonic.h"
#include "gpio.h"
#include "std_types.h"
#include "util/delay.h"
#include "icu.h"

uint8 g_edgeCount = 0;
uint16 g_timeHigh = 0;

static extern uint8 ultraSonic_Flag;

void Ultrasonic_edgeProcessing(void)
{
	g_edgeCount++;
	if(g_edgeCount == 1)
	{
		/*
		 * Clear the timer counter register to start measurements from the
		 * first detected rising edge
		 */
		Icu_clearTimerValue();
		/* Detect falling edge */
		Icu_setEdgeDetectionType(FALLING);
		ultraSonic_Flag = 5;

	}
	else if(g_edgeCount == 2)
	{
		/* Store the High time value */
		g_timeHigh = Icu_getInputCaptureValue();
		/* Detect rising edge */
		ultraSonic_Flag = 5;
	}
}

void Ultrasonic_init(void)
{
	Icu_setCallBack (Ultrasonic_edgeProcessing);

	/* Icu_Initialization */
	Icu_ConfigType config = {F_CPU_8,RISING};
	Icu_init(&config);

	/* Set the call back */

	/* Setup the direction for trigger pin */
	GPIO_setupPinDirection(PORTB_ID,PIN5_ID,PIN_OUTPUT);
}

void Ultrasonic_trigger(void)
{
	GPIO_writePin(PORTB_ID,PIN5_ID,1);
	_delay_ms(1000);
	GPIO_writePin(PORTB_ID,PIN5_ID,0);
}

uint16 Ultrasonic_readDistance(void)
{
	return (340 * g_timeHigh )/2;
}
